

================================================================
== Synthesis Summary Report of 'krnl_vadd'
================================================================
+ General Information: 
    * Date:           Wed May  7 22:03:13 2025
    * Version:        2024.1 (Build 5069499 on May 21 2024)
    * Project:        krnl_vadd
    * Solution:       hls (Vitis Kernel Flow Target)
    * Product family: versalaicore
    * Target device:  xcvc1902-vsva2197-2MP-e-S
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +----------------------------------+------+------+---------+-----------+----------+---------+------+----------+---------+----+------------+------------+-----+
    |              Modules             | Issue|      | Latency |  Latency  | Iteration|         | Trip |          |         |    |            |            |     |
    |              & Loops             | Type | Slack| (cycles)|    (ns)   |  Latency | Interval| Count| Pipelined|  BRAM   | DSP|     FF     |     LUT    | URAM|
    +----------------------------------+------+------+---------+-----------+----------+---------+------+----------+---------+----+------------+------------+-----+
    |+ krnl_vadd*                      |     -|  0.00|     4249|  2.124e+04|         -|     4175|     -|  dataflow|  4 (~0%)|   -|  5535 (~0%)|  7336 (~0%)|    -|
    | + entry_proc                     |     -|  2.89|        0|      0.000|         -|        0|     -|        no|        -|   -|     3 (~0%)|    34 (~0%)|    -|
    | + load_input                     |     -|  0.00|     4173|  2.086e+04|         -|     4173|     -|        no|        -|   -|   175 (~0%)|   782 (~0%)|    -|
    |  + load_input_Pipeline_mem_rd    |     -|  1.98|     4098|  2.049e+04|         -|     4098|     -|        no|        -|   -|    34 (~0%)|   157 (~0%)|    -|
    |   o mem_rd                       |     -|  3.65|     4096|  2.048e+04|         2|        1|  4096|       yes|        -|   -|           -|           -|    -|
    | + load_input_1                   |     -|  0.00|     4172|  2.086e+04|         -|     4172|     -|        no|        -|   -|   281 (~0%)|   228 (~0%)|    -|
    |  o mem_rd                        |     -|  3.65|     4170|  2.085e+04|        76|        1|  4096|       yes|        -|   -|           -|           -|    -|
    | + compute_add                    |     -|  1.49|     4100|  2.050e+04|         -|     4100|     -|        no|        -|   -|    71 (~0%)|   261 (~0%)|    -|
    |  + compute_add_Pipeline_execute  |     -|  1.49|     4098|  2.049e+04|         -|     4098|     -|        no|        -|   -|    34 (~0%)|   195 (~0%)|    -|
    |   o execute                      |     -|  3.65|     4096|  2.048e+04|         2|        1|  4096|       yes|        -|   -|           -|           -|    -|
    | + store_result                   |     -|  0.00|     4174|  2.087e+04|         -|     4174|     -|        no|        -|   -|   207 (~0%)|   798 (~0%)|    -|
    |  + store_result_Pipeline_mem_wr  |     -|  1.77|     4098|  2.049e+04|         -|     4098|     -|        no|        -|   -|    34 (~0%)|   157 (~0%)|    -|
    |   o mem_wr                       |     -|  3.65|     4096|  2.048e+04|         2|        1|  4096|       yes|        -|   -|           -|           -|    -|
    +----------------------------------+------+------+---------+-----------+----------+---------+------+----------+---------+----+------------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+-------------+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface   | Read/Write | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|             |            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+-------------+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_gmem0 | READ_WRITE | 32 -> 32   | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          | BRAM=2            |
| m_axi_gmem1 | READ_ONLY  | 32 -> 32   | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          | BRAM=2            |
+-------------+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                                         |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 4=AP_CONTINUE 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                                           |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                                      |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                                      |
| s_axi_control | in1_1    | 0x10   | 32    | W      | Data signal of in1               |                                                                                    |
| s_axi_control | in1_2    | 0x14   | 32    | W      | Data signal of in1               |                                                                                    |
| s_axi_control | in2_1    | 0x1c   | 32    | W      | Data signal of in2               |                                                                                    |
| s_axi_control | in2_2    | 0x20   | 32    | W      | Data signal of in2               |                                                                                    |
| s_axi_control | out_r_1  | 0x28   | 32    | W      | Data signal of out_r             |                                                                                    |
| s_axi_control | out_r_2  | 0x2c   | 32    | W      | Data signal of out_r             |                                                                                    |
| s_axi_control | size     | 0x34   | 32    | W      | Data signal of size              |                                                                                    |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+

* Other Ports
+-------------+-----------+----------+
| Port        | Direction | Bitwidth |
+-------------+-----------+----------+
| event_done  | out       | 1        |
| event_start | out       | 1        |
+-------------+-----------+----------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+---------------+
| Argument | Direction | Datatype      |
+----------+-----------+---------------+
| in1      | inout     | unsigned int* |
| in2      | in        | unsigned int* |
| out      | inout     | unsigned int* |
| size     | in        | int           |
+----------+-----------+---------------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+-----------------------------------+
| Argument | HW Interface  | HW Type   | HW Usage | HW Info                           |
+----------+---------------+-----------+----------+-----------------------------------+
| in1      | m_axi_gmem0   | interface |          | channel=0                         |
| in1      | s_axi_control | register  | offset   | name=in1_1 offset=0x10 range=32   |
| in1      | s_axi_control | register  | offset   | name=in1_2 offset=0x14 range=32   |
| in2      | m_axi_gmem1   | interface |          | channel=0                         |
| in2      | s_axi_control | register  | offset   | name=in2_1 offset=0x1c range=32   |
| in2      | s_axi_control | register  | offset   | name=in2_2 offset=0x20 range=32   |
| out      | m_axi_gmem0   | interface |          | channel=0                         |
| out      | s_axi_control | register  | offset   | name=out_r_1 offset=0x28 range=32 |
| out      | s_axi_control | register  | offset   | name=out_r_2 offset=0x2c range=32 |
| size     | s_axi_control | register  |          | name=size offset=0x34 range=32    |
+----------+---------------+-----------+----------+-----------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+----------+-------+--------+---------------------+
| HW Interface | Direction | Length   | Width | Loop   | Loop Location       |
+--------------+-----------+----------+-------+--------+---------------------+
| m_axi_gmem0  | read      | variable | 32    | mem_rd | krnl_vadd.cpp:93:5  |
| m_axi_gmem0  | write     | variable | 32    | mem_wr | krnl_vadd.cpp:114:5 |
| m_axi_gmem1  | read      | variable | 32    | mem_rd | krnl_vadd.cpp:93:5  |
+--------------+-----------+----------+-------+--------+---------------------+

* All M_AXI Variable Accesses
+-------------------+----------+---------------------+-----------+--------------+----------+--------+---------------------+------------+------------------------------------------------+
| HW Interface      | Variable | Access Location     | Direction | Burst Status | Length   | Loop   | Loop Location       | Resolution | Problem                                        |
+-------------------+----------+---------------------+-----------+--------------+----------+--------+---------------------+------------+------------------------------------------------+
| m_axi_gmem0       | out      | krnl_vadd.cpp:116:9 | write     | Widen Fail   |          | mem_wr | krnl_vadd.cpp:114:5 | 214-234    | Sequential access length is not divisible by 2 |
| m_axi_gmem0       | out      | krnl_vadd.cpp:116:9 | write     | Inferred     | variable | mem_wr | krnl_vadd.cpp:114:5 |            |                                                |
| m_axi_gmem0,gmem1 | in       | krnl_vadd.cpp:95:11 | read      | Widen Fail   |          | mem_rd | krnl_vadd.cpp:93:5  | 214-234    | Sequential access length is not divisible by 2 |
| m_axi_gmem0,gmem1 | in       | krnl_vadd.cpp:95:11 | read      | Inferred     | variable | mem_rd | krnl_vadd.cpp:93:5  |            |                                                |
+-------------------+----------+---------------------+-----------+--------------+----------+--------+---------------------+------------+------------------------------------------------+

    * Resolution URL: docs.xilinx.com/access/sources/dita/topic?Doc_Version=2024.1%20English&url=ug1448-hls-guidance&resourceid=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+----------------------------------+-----+--------+-------------+--------+----------+---------+
| Name                             | DSP | Pragma | Variable    | Op     | Impl     | Latency |
+----------------------------------+-----+--------+-------------+--------+----------+---------+
| + krnl_vadd                      | 0   |        |             |        |          |         |
|  + load_input                    | 0   |        |             |        |          |         |
|    icmp_ln93_fu_100_p2           |     |        | icmp_ln93   | setgt  | auto     | 0       |
|    empty_fu_131_p3               |     |        | empty       | select | auto_sel | 0       |
|   + load_input_Pipeline_mem_rd   | 0   |        |             |        |          |         |
|     icmp_ln93_fu_111_p2          |     |        | icmp_ln93   | setlt  | auto     | 0       |
|     add_ln93_fu_117_p2           |     |        | add_ln93    | add    | fabric   | 0       |
|  + load_input_1                  | 0   |        |             |        |          |         |
|    icmp_ln93_fu_115_p2           |     |        | icmp_ln93   | setgt  | auto     | 0       |
|    empty_fu_125_p3               |     |        | empty       | select | auto_sel | 0       |
|    icmp_ln93_1_fu_159_p2         |     |        | icmp_ln93_1 | setlt  | auto     | 0       |
|    add_ln93_fu_165_p2            |     |        | add_ln93    | add    | fabric   | 0       |
|  + compute_add                   | 0   |        |             |        |          |         |
|   + compute_add_Pipeline_execute | 0   |        |             |        |          |         |
|     icmp_ln106_fu_93_p2          |     |        | icmp_ln106  | setlt  | auto     | 0       |
|     add_ln106_fu_99_p2           |     |        | add_ln106   | add    | fabric   | 0       |
|     add_ln108_fu_121_p2          |     |        | add_ln108   | add    | fabric   | 0       |
|  + store_result                  | 0   |        |             |        |          |         |
|    icmp_ln114_fu_87_p2           |     |        | icmp_ln114  | setgt  | auto     | 0       |
|    empty_fu_118_p3               |     |        | empty       | select | auto_sel | 0       |
|   + store_result_Pipeline_mem_wr | 0   |        |             |        |          |         |
|     icmp_ln114_fu_115_p2         |     |        | icmp_ln114  | setlt  | auto     | 0       |
|     add_ln114_fu_121_p2          |     |        | add_ln114   | add    | fabric   | 0       |
+----------------------------------+-----+--------+-------------+--------+----------+---------+


================================================================
== Storage Report
================================================================
+-------------------+--------------+-------------+------+------+--------+------------+------+---------+------------------+
| Name              | Usage        | Type        | BRAM | URAM | Pragma | Variable   | Impl | Latency | Bitwidth, Depth, |
|                   |              |             |      |      |        |            |      |         | Banks            |
+-------------------+--------------+-------------+------+------+--------+------------+------+---------+------------------+
| + krnl_vadd       |              |             | 4    | 0    |        |            |      |         |                  |
|   control_s_axi_U | interface    | s_axilite   |      |      |        |            |      |         |                  |
|   gmem0_m_axi_U   | interface    | m_axi       | 2    |      |        |            |      |         |                  |
|   gmem1_m_axi_U   | interface    | m_axi       | 2    |      |        |            |      |         |                  |
|   out_r_c_U       | fifo channel | scalar prop |      |      |        | out_r_c    | srl  | 0       | 64, 4, 1         |
|   size_c1_U       | fifo channel | scalar prop |      |      |        | size_c1    | srl  | 0       | 32, 2, 1         |
|   in1_stream_U    | fifo channel | stream      |      |      |        | in1_stream | srl  | 0       | 32, 2, 1         |
|   in2_stream_U    | fifo channel | stream      |      |      |        | in2_stream | srl  | 0       | 32, 2, 1         |
|   size_c_U        | fifo channel | scalar prop |      |      |        | size_c     | srl  | 0       | 32, 2, 1         |
|   out_stream_U    | fifo channel | stream      |      |      |        | out_stream | srl  | 0       | 32, 2, 1         |
+-------------------+--------------+-------------+------+------+--------+------------+------+---------+------------------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+----------------+---------------------------------+-----------------------------------+
| Type           | Options                         | Location                          |
+----------------+---------------------------------+-----------------------------------+
| loop_tripcount | min = c_size max = c_size       | krnl_vadd.cpp:94 in load_input    |
| loop_tripcount | min = c_size max = c_size       | krnl_vadd.cpp:107 in compute_add  |
| loop_tripcount | min = c_size max = c_size       | krnl_vadd.cpp:115 in store_result |
| interface      | m_axi port = in1 bundle = gmem0 | krnl_vadd.cpp:133 in krnl_vadd    |
| interface      | m_axi port = in2 bundle = gmem1 | krnl_vadd.cpp:134 in krnl_vadd    |
| interface      | m_axi port = out bundle = gmem0 | krnl_vadd.cpp:135 in krnl_vadd    |
| dataflow       |                                 | krnl_vadd.cpp:141 in krnl_vadd    |
+----------------+---------------------------------+-----------------------------------+


